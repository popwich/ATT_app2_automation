<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="lee-PC" name="Default test" tests="28" failures="0" timestamp="8 Dec 2015 23:33:41 GMT" time="6.04" errors="0">
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.GesturesTest">
    <failure type="org.openqa.selenium.NoSuchElementException" message="Can&amp;apos;t locate an element by this strategy: Locator map: 
- native content: &amp;quot;By.AndroidUIAutomator: new UiSelector().description(&amp;quot;ReferenceApp&amp;quot;)&amp;quot; 
- html content: &amp;quot;by id or name &amp;quot;toggle&amp;quot;&amp;quot;
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;2.46.0&amp;apos;, revision: &amp;apos;61506a4624b13675f24581e453592342b7485d71&amp;apos;, time: &amp;apos;2015-06-04 10:22:50&amp;apos;
System info: host: &amp;apos;lee-PC&amp;apos;, ip: &amp;apos;192.168.0.105&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_65&amp;apos;
Driver info: driver.version: unknown">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: Locator map: 
- native content: "By.AndroidUIAutomator: new UiSelector().description("ReferenceApp")" 
- html content: "by id or name "toggle""
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50'
System info: host: 'lee-PC', ip: '192.168.0.105', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_65'
Driver info: driver.version: unknown
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:169)
	at io.appium.java_client.pagefactory.ElementInterceptor.intercept(ElementInterceptor.java:30)
	at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b05715cb.click(<generated>)
	at Pages.NavigationPage.gotoCategory(NavigationPage.java:48)
	at Tests.AbstractBaseTests.TestBase.navigateTo(TestBase.java:103)
	at Tests.AbstractBaseTests.TabTestBase.navigateTo(TabTestBase.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:207)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:178)
]]>
    </failure>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.GesturesTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.RadioButtonTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.RadioButtonTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Native.CameraTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Native.CameraTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.EditText">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.EditText">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Native.ImageGalleryTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Native.ImageGalleryTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.HomePageTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.HomePageTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.AlertPageTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.AlertPageTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Native.MediaPlayerTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Native.MediaPlayerTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.ToggleButtonTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.ToggleButtonTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.WebViewTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.WebViewTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterMethod logOut" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod logOut -->
  <testcase name="@AfterMethod logOut" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterMethod logOut -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Native.OutOfViewTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Native.OutOfViewTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.SpinnerTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.SpinnerTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.PullToRefreshTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.PullToRefreshTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.FixturesTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.FixturesTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Inputs.CheckboxTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Inputs.CheckboxTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.Native.ScrollViewTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.Native.ScrollViewTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="@BeforeClass navigateTo" time="0.0" classname="Tests.NestedViewsTest">
    <skipped/>
  </testcase> <!-- @BeforeClass navigateTo -->
  <testcase name="@AfterMethod goBackToMenu" time="0.0" classname="Tests.NestedViewsTest">
    <skipped/>
  </testcase> <!-- @AfterMethod goBackToMenu -->
  <testcase name="@AfterMethod goBackToMenu" time="0.0" classname="Tests.NestedViewsTest">
    <skipped/>
  </testcase> <!-- @AfterMethod goBackToMenu -->
  <testcase name="@AfterClass restartApp" time="0.0" classname="Tests.NestedViewsTest">
    <skipped/>
  </testcase> <!-- @AfterClass restartApp -->
  <testcase name="testFling" time="0.01" classname="Tests.Inputs.GesturesTest">
    <skipped/>
  </testcase> <!-- testFling -->
  <testcase name="testLongPress" time="0.0" classname="Tests.Inputs.GesturesTest">
    <skipped/>
  </testcase> <!-- testLongPress -->
  <testcase name="testSinglePress" time="0.0" classname="Tests.Inputs.GesturesTest">
    <skipped/>
  </testcase> <!-- testSinglePress -->
  <testcase name="testFirstRadio" time="0.0" classname="Tests.Inputs.RadioButtonTest">
    <skipped/>
  </testcase> <!-- testFirstRadio -->
  <testcase name="testSecondRadio" time="0.001" classname="Tests.Inputs.RadioButtonTest">
    <skipped/>
  </testcase> <!-- testSecondRadio -->
  <testcase name="testThirdRadio" time="0.001" classname="Tests.Inputs.RadioButtonTest">
    <skipped/>
  </testcase> <!-- testThirdRadio -->
  <testcase name="testCameraStatus" time="0.001" classname="Tests.Native.CameraTest">
    <skipped/>
  </testcase> <!-- testCameraStatus -->
  <testcase name="testTextBox" time="0.001" classname="Tests.Inputs.EditText">
    <skipped/>
  </testcase> <!-- testTextBox -->
  <testcase name="checkIfImageGalleryDisplayed" time="0.001" classname="Tests.Native.ImageGalleryTest">
    <skipped/>
  </testcase> <!-- checkIfImageGalleryDisplayed -->
  <testcase name="testHomePageHeadline" time="0.0" classname="Tests.HomePageTest">
    <skipped/>
  </testcase> <!-- testHomePageHeadline -->
  <testcase name="testHomePageSubheader" time="0.001" classname="Tests.HomePageTest">
    <skipped/>
  </testcase> <!-- testHomePageSubheader -->
  <testcase name="testAlertMessage" time="0.001" classname="Tests.AlertPageTest">
    <skipped/>
  </testcase> <!-- testAlertMessage -->
  <testcase name="testIfMediaPlayerIsPlaying" time="0.0" classname="Tests.Native.MediaPlayerTest">
    <skipped/>
  </testcase> <!-- testIfMediaPlayerIsPlaying -->
  <testcase name="turnViewOn" time="0.0" classname="Tests.Inputs.ToggleButtonTest">
    <skipped/>
  </testcase> <!-- turnViewOn -->
  <testcase name="testWebView" time="0.001" classname="Tests.WebViewTest">
    <skipped/>
  </testcase> <!-- testWebView -->
  <testcase name="loginFail" time="0.001" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- loginFail -->
  <testcase name="loginSuccessFully" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- loginSuccessFully -->
  <testcase name="scrollOutOfView" time="0.002" classname="Tests.Native.OutOfViewTest">
    <skipped/>
  </testcase> <!-- scrollOutOfView -->
  <testcase name="checkIndex" time="0.001" classname="Tests.Inputs.SpinnerTest">
    <skipped/>
  </testcase> <!-- checkIndex -->
  <testcase name="testPullToRefresh" time="0.0" classname="Tests.Inputs.PullToRefreshTest">
    <skipped/>
  </testcase> <!-- testPullToRefresh -->
  <testcase name="testBluetoothOn" time="0.001" classname="Tests.FixturesTest">
    <skipped/>
  </testcase> <!-- testBluetoothOn -->
  <testcase name="testGPSOn" time="0.0" classname="Tests.FixturesTest">
    <skipped/>
  </testcase> <!-- testGPSOn -->
  <testcase name="testNFCOn" time="0.001" classname="Tests.FixturesTest">
    <skipped/>
  </testcase> <!-- testNFCOn -->
  <testcase name="testWifiOn" time="0.001" classname="Tests.FixturesTest">
    <skipped/>
  </testcase> <!-- testWifiOn -->
  <testcase name="testCheckBox" time="0.018" classname="Tests.Inputs.CheckboxTest">
    <skipped/>
  </testcase> <!-- testCheckBox -->
  <testcase name="testScroll" time="0.004" classname="Tests.Native.ScrollViewTest">
    <skipped/>
  </testcase> <!-- testScroll -->
  <testcase name="testBackButton" time="0.002" classname="Tests.NestedViewsTest">
    <skipped/>
  </testcase> <!-- testBackButton -->
  <testcase name="testUpButton" time="0.001" classname="Tests.NestedViewsTest">
    <skipped/>
  </testcase> <!-- testUpButton -->
</testsuite> <!-- Default test -->
